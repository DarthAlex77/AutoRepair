// <auto-generated />
using System;
using AutoRepair;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoRepair.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoRepair.Model.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Argb")
                        .HasColumnName("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarBodyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarEngineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("int");

                    b.Property<string>("CarNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarOwnerClientID")
                        .HasColumnType("int");

                    b.Property<string>("CarProduceYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarVin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("CarOwnerClientID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("AutoRepair.Model.CarModel", b =>
                {
                    b.Property<int>("CarModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarModelId");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("AutoRepair.Model.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AutoRepair.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AutoRepair.Model.OrderServices", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderServices");
                });

            modelBuilder.Entity("AutoRepair.Model.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicePrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarrantyPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("AutoRepair.Model.Spare", b =>
                {
                    b.Property<string>("SpareId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("SpareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SparePrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpareWarranty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpareId");

                    b.HasIndex("OrderId");

                    b.ToTable("Spares");
                });

            modelBuilder.Entity("AutoRepair.Model.Car", b =>
                {
                    b.HasOne("AutoRepair.Model.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId");

                    b.HasOne("AutoRepair.Model.Client", "CarOwner")
                        .WithMany("ClientCars")
                        .HasForeignKey("CarOwnerClientID");
                });

            modelBuilder.Entity("AutoRepair.Model.Order", b =>
                {
                    b.HasOne("AutoRepair.Model.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("AutoRepair.Model.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID");
                });

            modelBuilder.Entity("AutoRepair.Model.OrderServices", b =>
                {
                    b.HasOne("AutoRepair.Model.Order", "Order")
                        .WithMany("OrderServices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoRepair.Model.Service", "Service")
                        .WithMany("OrderServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoRepair.Model.Spare", b =>
                {
                    b.HasOne("AutoRepair.Model.Order", null)
                        .WithMany("OderSpares")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
